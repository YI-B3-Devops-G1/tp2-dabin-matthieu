version: '3'
services:
  webserver:
    build: 
      context: ./nginx
      dockerfile: DockerFile
    ports: 
      - "80:80"    
    container_name: reverseproxy
    hostname: reverseproxy
    environment:
      - NGINX_PORT=80
    networks:
      - nodejs-network
  apinode:
    build:
      context: ./Nodejs
      dockerfile: DockerFile
    container_name: nodeapi
    hostname: nodeapi
    environment:
      - NODE_ENV=development
      - API_PORT=3000
      - DB_HOST=postgres  
      - DB_PORT=5432     
      - DB_NAME=database
      - DB_USER=postgres
      - DB_PASSWORD=root
      - REDIS_HOST=redis     
    networks:
      - nodejs-network
      - db-network
      
  postgres:
    image: postgres
    restart: on-failure
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: root
        POSTGRES_DB: database
        PGDATA: /tmp
    networks:
      - nodejs-network

  redis:
    image: redis
    restart: on-failure
    networks:
      - db-network

networks:
  db-network:
  nodejs-network: